from aiogram.types import InputMediaPhoto
from sqlalchemy.ext.asyncio import AsyncSession
from db.orm_query import orm_get_banner, orm_check_catalog, orm_get_category, orm_select_tovar
from kbds.inline import Menucallback, get_user_main_btns,  get_callback_btns



async def main(session, menu_name, level):
    banner = await orm_get_banner(session, menu_name)
    image = InputMediaPhoto(media=banner.image, caption=banner.description)
    kbds = get_user_main_btns(level=level)
    return image, kbds


async def categ(session):
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–Ω–Ω–µ—Ä (–µ—Å–ª–∏ –æ–Ω –Ω—É–∂–µ–Ω)
    banner = await orm_get_banner(session, "catalog")

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    accounts = await orm_check_catalog(session)

    if banner:
        image = InputMediaPhoto(
            media=banner.image,
            caption="–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—åüòä:",
        )
    else:
        image = None

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏–≥—Ä
    game_buttons = []
    game_count = {}

    for account in accounts:
        game_cat = account.category
        if game_cat in game_count:
            game_count[game_cat] += 1
        else:
            game_count[game_cat] = 1

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    for game_cat in game_count:
        game_buttons.append(
            {
                "text": f"{game_cat}",  # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
                "callback_data": f"show_cat_{game_cat}",  # –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
            }
        )

    kbds = {"inline_keyboard": [game_buttons]}

    return image, kbds


async def game_catalog(session: AsyncSession, game_cat: str, level):
    banner = await orm_get_banner(session, "catalog")
    # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    games = await orm_get_category(session, game_cat)
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    game_buttons = {}  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    for game in games:
        game_name = game.name
        game_buttons[game_name] = f'show_{game_name}'


    if banner:
        image = InputMediaPhoto(
            media=banner.image,
            caption="–¢–æ–≤–∞—Ä—ãüëå:"
        )
    else:
        image = None

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–¥–∏–Ω —Ä–∞–∑, –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–µ –∫–Ω–æ–ø–∫–∏
    kbds =  get_callback_btns(btns={
        **game_buttons,  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä
        "–Ω–∞–∑–∞–¥": Menucallback(level=level - 1, menu_name='catalog').pack()
    },sizes=(1,))

    return image, kbds


async def zaglushka(session:AsyncSession, tovar : str, level):
    banner = await orm_get_banner(session, "catalog")
    products = await orm_select_tovar(session, tovar)
    if products is None:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        return None, None 
    
    caption = f"{products.name}\n–¶–µ–Ω–∞: {products.price}‚ÇΩ"
    image = InputMediaPhoto(
        media=banner.image,
        caption=caption,
    )
    
    kbds =  get_callback_btns(btns={
        "–∫—É–ø–∏—Ç—å": f"select_{products.name}",
        "–ï—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?":   "promo",
        "–ù–∞–∑–∞–¥":    Menucallback(level=level -2, menu_name='game_catalog').pack()
    })
    
    return image, kbds




async def get_menu_content(
        
    session: AsyncSession,
    level: int,
    menu_name: str,
    game_cat: str = None,
    tovar: str = None
):
    if level == 0:
        return await main(session=session, level=level, menu_name=menu_name)

    elif level == 1:
        return await categ(session)

    elif level == 2:
        return await game_catalog(session, game_cat, level)
    
    elif level == 3:
        return await zaglushka(session, tovar, level)